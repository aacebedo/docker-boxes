FROM {{.Env.BASE_IMAGE}}
MAINTAINER Alexandre ACEBEDO

RUN apt update 
RUN apt install python python-pip python-imaging python3 sqlite python-pillow \
    python-dev libldap2-dev zsh less vim libevent-dev zlib1g-dev tzdata \
    libglib2.0-dev libffi-dev libjansson4 libsasl2-dev wget python3-pip -y --force-yes

RUN pip install python-ldap
RUN pip3 install --upgrade pip
RUN pip3 install pexpect

ARG TIMEZONE=Europe/Paris

ARG SEAFILE_INSTALLDIR=/opt/seafile
ARG SEAFILE_DATADIR=/var/lib/seafile

ARG SEAFILE_VERSION=5.1.3
ARG SEAFILE_URL=https://bintray.com/artifact/download/seafile-org/seafile/seafile-server_${SEAFILE_VERSION}_x86-64.tar.gz

ARG SEAFILE_USER=seafile
ARG SEAFILE_UID=1000
ARG SEAFILE_GROUP=seafile
ARG SEAFILE_GID=1000

ARG DOCKERIZE_VERSION=0.2.0
ARG DOCKERIZE_ARCH=amd64
ARG DOCKERIZE_URL=https://github.com/aacebedo/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-${DOCKERIZE_ARCH}-v${DOCKERIZE_VERSION}.tar.gz
ARG DOCKERIZE_INSTALLDIR=/opt/dockerize

ARG NGINX_VERSION=1.11.1
ARG NGINX_INSTALLDIR=/opt/nginx

ARG SEAFILE_SEAHUB_PORT=8000
ARG SEAFILE_SERVER_PORT=8082

ARG SEAFILE_PORT=80

ENV SEAFILE_SERVERNAME     seafile
ENV SEAFILE_HOSTNAME       seafile.example.com
ENV SEAFILE_PROTOCOL       https

ENV SEAFILE_ADMIN_EMAIL    admin@example.com
ENV SEAFILE_ADMIN_PASSWORD password

ENV SEAFILE_SMTP_TLS true
ENV SEAFILE_SMTP_SERVER smtp.example.com
ENV SEAFILE_SMTP_EMAIL admin@example.com
ENV SEAFILE_SMTP_PASSWORD password

RUN cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime
RUN echo "${TIMEZONE}" > /etc/timezone

RUN addgroup --system --gid ${SEAFILE_GID} ${SEAFILE_GROUP}
RUN adduser --system -gid ${SEAFILE_GID} --uid ${SEAFILE_UID} ${SEAFILE_USER} 

RUN mkdir -p ${SEAFILE_INSTALLDIR}
RUN mkdir -p ${SEAFILE_DATADIR}
RUN mkdir -p ${DOCKERIZE_INSTALLDIR}
RUN mkdir -p ${SEAFILE_INSTALLDIR}/logs/nginx
RUN mkdir -p ${SEAFILE_INSTALLDIR}/run/nginx
RUN mkdir -p /tmp/nginx

RUN wget ${DOCKERIZE_URL} -O /tmp/dockerize.tar.gz
RUN tar -xzvf /tmp/dockerize.tar.gz -C ${DOCKERIZE_INSTALLDIR} 
RUN rm -rf /tmp/dockerize.tar.gz

RUN apt install build-essential libssl-dev libxml2-dev libpcre3-dev libxslt-dev -y --force-yes
RUN wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz -O /tmp/nginx.tar.gz
RUN tar --strip-components=1 -xzvf /tmp/nginx.tar.gz -C /tmp/nginx
RUN rm -rf /tmp/nginx.tar.gz
WORKDIR /tmp/nginx
RUN ./configure --with-cc-opt='-O2 -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' \
 --with-ld-opt='-Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now' \
 --prefix=${NGINX_INSTALLDIR} --conf-path=${SEAFILE_INSTALLDIR}/conf/nginx.conf \
 --http-log-path=${SEAFILE_INSTALLDIR}/logs/nginx/access.log --error-log-path=${SEAFILE_INSTALLDIR}/logs/nginx/error.log \
 --lock-path=${SEAFILE_INSTALLDIR}/run/nginx.lock --pid-path=${SEAFILE_INSTALLDIR}/run/nginx.pid --http-client-body-temp-path=${SEAFILE_INSTALLDIR}/run/body \
--http-fastcgi-temp-path=${SEAFILE_INSTALLDIR}/run/nginx --http-proxy-temp-path=${SEAFILE_INSTALLDIR}/run/nginx \
--with-pcre-jit --with-http_ssl_module  --with-http_realip_module --with-http_auth_request_module \
--with-http_addition_module --with-http_dav_module  --with-http_gunzip_module --with-http_gzip_static_module \
--with-mail --with-mail_ssl_module --with-threads
RUN make install
RUN rm -rf /tmp/nginx
RUN apt remove build-essential libssl-dev libxml2-dev libpcre3-dev libxslt-dev -y --force-yes

COPY files/entrypoint.sh.tmpl ${SEAFILE_INSTALLDIR}/entrypoint.sh.tmpl
RUN ${DOCKERIZE_INSTALLDIR}/dockerize -template ${SEAFILE_INSTALLDIR}/entrypoint.sh.tmpl:${SEAFILE_INSTALLDIR}/entrypoint.sh

COPY files/seafile-installer.py ${SEAFILE_INSTALLDIR}/seafile-installer.py
COPY files/ccnet.conf.tmpl ${SEAFILE_INSTALLDIR}/ccnet.conf.tmpl
COPY files/seahub_settings.py.tmpl ${SEAFILE_INSTALLDIR}/seahub_settings.py.tmpl
COPY files/nginx.conf.tmpl ${SEAFILE_INSTALLDIR}/nginx.conf.tmpl

RUN wget ${SEAFILE_URL} -O /tmp/seafile.tar.gz

RUN chown -R ${SEAFILE_USER}:${SEAFILE_GROUP} ${SEAFILE_INSTALLDIR}
RUN chown -R ${SEAFILE_USER}:${SEAFILE_GROUP} ${SEAFILE_DATADIR}
RUN chown -R ${SEAFILE_USER}:${SEAFILE_GROUP} ${DOCKERIZE_INSTALLDIR}
RUN chown -R ${SEAFILE_USER}:${SEAFILE_GROUP} ${NGINX_INSTALLDIR}

RUN chmod u+x ${SEAFILE_INSTALLDIR}/entrypoint.sh
RUN chmod u+x ${SEAFILE_INSTALLDIR}/seafile-installer.py

RUN setcap 'cap_net_bind_service=+ep' ${NGINX_INSTALLDIR}/sbin/nginx

EXPOSE ${SEAFILE_PORT}

USER ${SEAFILE_USER}
WORKDIR ${SEAFILE_INSTALLDIR}

ENTRYPOINT ["./entrypoint.sh"]
