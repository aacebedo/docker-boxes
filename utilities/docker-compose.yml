version: '2'
services:
  traefik:
    build:
      context: ./traefik
      args:
        DOCKERIZE_ARCH:         ${DOCKERIZE_ARCH}
        TRAEFIK_ARCH:           ${TRAEFIK_ARCH}
        TRAEFIK_VERSION:        ${TRAEFIK_VERSION}
    labels:
      - traefik.enable=false
    networks:
      - utilities_network
    environment:
      - TRAEFIK_DOMAIN=${TRAEFIK_DOMAIN}
      - TRAEFIK_SUBDOMAINS=${TRAEFIK_SUBDOMAINS}
      - TRAEFIK_ADMIN_EMAIL=${TRAEFIK_ADMIN_EMAIL}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TRAEFIK_DATADIR}:/var/lib/traefik
    ports:
      - ${TRAEFIK_PORT}:80
      - ${TRAEFIK_SECUREPORT}:443
      - ${TRAEFIK_CONTROLPORT}:82
    restart: always

  cfdnsupdater:
    build:
      context: ./cfdnsupdater
      args:
        DOCKERIZE_ARCH:           ${DOCKERIZE_ARCH}
        CFDNSUPDATER_ARCH:        ${CFDNSUPDATER_ARCH}
        CFDNSUPDATER_VERSION:     ${CFDNSUPDATER_VERSION}
    environment:
      - CFDNSUPDATER_DOMAIN=${CFDNSUPDATER_DOMAIN}
      - CFDNSUPDATER_EMAIL=${CFDNSUPDATER_EMAIL}
      - CFDNSUPDATER_APIKEY=${CFDNSUPDATER_APIKEY}
      - CFDNSUPDATER_PERIOD=${CFDNSUPDATER_PERIOD}
      - CFDNSUPDATER_RECORDTYPES=${CFDNSUPDATER_RECORDTYPES}
      - CFDNSUPDATER_RECORDNAMES=${CFDNSUPDATER_RECORDNAMES}
    restart: always
    labels:
      - traefik.enable=false
   
  dnsdock:
    build:
      context: ./dnsdock
      args:
        DOCKERIZE_ARCH:      ${DOCKERIZE_ARCH}
        DNSDOCK_ARCH:        ${DNSDOCK_ARCH}
        DNSDOCK_VERSION:     ${DNSDOCK_VERSION}
    environment:
      - DNSDOCK_DOMAIN=${DNSDOCK_DOMAIN}
    restart: always
    labels:
      - traefik.enable=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - ${DNSDOCK_PORT}:53
      - ${DNSDOCK_CONTROLPORT}:80

networks:
  utilities_network:
    external:
      name: ${UTILITIES_NETWORK}
