FROM {{.Env.BASE_IMAGE}}
MAINTAINER Alexandre ACEBEDO

RUN apk update
RUN apk add tzdate python git unzip wget tar zsh openssl ca-certificates vim bash nodejs-lts libcap

ARG TIMEZONE=Europe/Paris
ARG GHOST_INSTALLDIR=/opt/ghost
ARG GHOST_DATADIR=/var/lib/ghost

ARG GHOST_VERSION=0.8.0
ARG GHOST_URL=https://ghost.org/zip/ghost-${GHOST_VERSION}.zip

ARG GHOST_USER=ghost
ARG GHOST_UID=1000
ARG GHOST_GROUP=ghost
ARG GHOST_GID=1000

ARG GHOST_PORT=80

ARG DOCKERIZE_VERSION=0.2.0
ARG DOCKERIZE_ARCH=amd64
ARG DOCKERIZE_URL=https://github.com/aacebedo/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-${DOCKERIZE_ARCH}-v${DOCKERIZE_VERSION}.tar.gz

ENV GHOST_HOSTNAME http://my.domain.com

RUN cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime
RUN echo "${TIMEZONE}" > /etc/timezone

RUN mkdir -p ${GHOST_INSTALLDIR}
RUN mkdir -p ${GHOST_DATADIR}

RUN addgroup -g ${GHOST_GID} -S ${GHOST_GROUP}
RUN adduser -G ${GHOST_GROUP} -u ${GHOST_UID} -S -H ${GHOST_USER} 

RUN wget ${GHOST_URL} -O /tmp/ghost.zip
WORKDIR ${GHOST_INSTALLDIR}
RUN unzip /tmp/ghost.zip
RUN rm -rf /tmp/ghost.zip

RUN wget ${DOCKERIZE_URL} -O /tmp/dockerize.tar.gz
RUN tar -C /usr/local/bin -xzvf /tmp/dockerize.tar.gz
RUN rm -rf /tmp/dockerize.tar.gz

COPY ./files/entrypoint.sh.tmpl ${GHOST_INSTALLDIR}/entrypoint.sh.tmpl
RUN dockerize -template ${GHOST_INSTALLDIR}/entrypoint.sh.tmpl:${GHOST_INSTALLDIR}/entrypoint.sh

RUN npm install --production 

COPY ./files/config.js.tmpl ${GHOST_INSTALLDIR}/config.js.tmpl

RUN chown -R ${GHOST_USER}:${GHOST_GROUP} ${GHOST_INSTALLDIR}
RUN chown -R ${GHOST_USER}:${GHOST_GROUP} ${GHOST_DATADIR}
RUN chmod u+x ${GHOST_INSTALLDIR}/entrypoint.sh

RUN setcap 'cap_net_bind_service=+ep' /usr/lib/node_modules/npm/bin/npm-cli.js
RUN setcap 'cap_net_bind_service=+ep' /usr/bin/node

VOLUME [${GHOST_DATADIR}]
EXPOSE ${GHOST_PORT}

USER ${GHOST_USER}

WORKDIR ${GHOST_INSTALLDIR}

ENTRYPOINT ["./entrypoint.sh"]
